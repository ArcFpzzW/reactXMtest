{"ast":null,"code":"import _objectSpread from \"D:\\\\GitHubxm\\\\reactXMtest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initState = {\n  joke_list: localStorage.joke_list ? JSON.parse(localStorage.joke_list).joke_list : []\n};\n\nconst reducer = (state = initState, action) => {\n  let newState = _objectSpread({}, state);\n\n  if (action.type === \"ADD\") {\n    if (newState.joke_list.length === 0) {\n      newState.joke_list.push(action.obj);\n    } else {\n      var flag = false;\n      newState.joke_list.forEach(item => {\n        if (item.id === action.obj.id) {\n          item.count += 0;\n          flag = true;\n        }\n      });\n      if (!flag) newState.joke_list.push(action.obj);\n    }\n  } else if (action.type === \"CHANGE\") {\n    newState.joke_list.forEach(item => {\n      if (item.id === action.id) {\n        item.flag = !item.flag;\n      }\n    });\n  } else if (action.type === \"REMOVE\") {\n    console.log(action.id); // newState.joke_list.splice(index,1)\n    // newState.joke_list.filter((item)=>{\n    // \tconsole.log(newState)\n    // \treturn item.id!==action.id\n    // })\n\n    newState.joke_list.forEach(item => {\n      if (item.id === action.id) {\n        newState.joke_list.splice(item.id, 1);\n      }\n    });\n  }\n\n  localStorage.joke_list = JSON.stringify(newState);\n  return newState;\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\GitHubxm\\reactXMtest\\src\\components\\third\\reducer.js"],"names":["initState","joke_list","localStorage","JSON","parse","reducer","state","action","newState","type","length","push","obj","flag","forEach","item","id","count","console","log","splice","stringify"],"mappings":";AAAA,IAAIA,SAAS,GAAE;AACdC,EAAAA,SAAS,EAACC,YAAY,CAACD,SAAb,GAAuBE,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACD,SAAxB,EAAmCA,SAA1D,GAAoE;AADhE,CAAf;;AAKA,MAAMI,OAAO,GAAG,CAACC,KAAK,GAACN,SAAP,EAAiBO,MAAjB,KAA0B;AACzC,MAAIC,QAAQ,qBAAMF,KAAN,CAAZ;;AAGG,MAAGC,MAAM,CAACE,IAAP,KAAc,KAAjB,EAAuB;AACtB,QAAGD,QAAQ,CAACP,SAAT,CAAmBS,MAAnB,KAA4B,CAA/B,EAAiC;AAChCF,MAAAA,QAAQ,CAACP,SAAT,CAAmBU,IAAnB,CAAwBJ,MAAM,CAACK,GAA/B;AACA,KAFD,MAGI;AACH,UAAIC,IAAI,GAAC,KAAT;AACAL,MAAAA,QAAQ,CAACP,SAAT,CAAmBa,OAAnB,CAA4BC,IAAD,IAAQ;AAClC,YAAGA,IAAI,CAACC,EAAL,KAAUT,MAAM,CAACK,GAAP,CAAWI,EAAxB,EAA2B;AAC1BD,UAAAA,IAAI,CAACE,KAAL,IAAY,CAAZ;AACAJ,UAAAA,IAAI,GAAC,IAAL;AACA;AACD,OALD;AAMA,UAAG,CAACA,IAAJ,EAAUL,QAAQ,CAACP,SAAT,CAAmBU,IAAnB,CAAwBJ,MAAM,CAACK,GAA/B;AACV;AACD,GAdD,MAgBK,IAAGL,MAAM,CAACE,IAAP,KAAc,QAAjB,EAA0B;AAC7BD,IAAAA,QAAQ,CAACP,SAAT,CAAmBa,OAAnB,CAA4BC,IAAD,IAAQ;AACnC,UAAGA,IAAI,CAACC,EAAL,KAAUT,MAAM,CAACS,EAApB,EAAuB;AACtBD,QAAAA,IAAI,CAACF,IAAL,GAAU,CAACE,IAAI,CAACF,IAAhB;AACA;AACD,KAJA;AAKJ,GANO,MAOH,IAAGN,MAAM,CAACE,IAAP,KAAe,QAAlB,EAA2B;AAC/BS,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAACS,EAAnB,EAD+B,CAE/B;AACA;AACA;AACG;AACH;;AACAR,IAAAA,QAAQ,CAACP,SAAT,CAAmBa,OAAnB,CAA4BC,IAAD,IAAQ;AAClC,UAAGA,IAAI,CAACC,EAAL,KAAUT,MAAM,CAACS,EAApB,EAAuB;AACtBR,QAAAA,QAAQ,CAACP,SAAT,CAAmBmB,MAAnB,CAA0BL,IAAI,CAACC,EAA/B,EAAkC,CAAlC;AACA;AACD,KAJD;AAKA;;AAEDd,EAAAA,YAAY,CAACD,SAAb,GAAuBE,IAAI,CAACkB,SAAL,CAAeb,QAAf,CAAvB;AACA,SAAOA,QAAP;AACA,CA3CD;;AA4CA,eAAgBH,OAAhB","sourcesContent":["var initState ={\r\n\tjoke_list:localStorage.joke_list?JSON.parse(localStorage.joke_list).joke_list:[]\r\n}\r\n\r\n\r\nconst reducer = (state=initState,action)=>{\r\n\tlet newState ={...state};\r\n\r\n   \r\n    if(action.type===\"ADD\"){\r\n    \tif(newState.joke_list.length===0){\r\n    \t\tnewState.joke_list.push(action.obj);\t\r\n    \t}\r\n    \telse{\r\n\t    \tvar flag=false;  \r\n\t    \tnewState.joke_list.forEach((item)=>{\r\n\t    \t\tif(item.id===action.obj.id){\r\n\t    \t\t\titem.count+=0;\r\n\t    \t\t\tflag=true;\r\n\t    \t\t}\r\n\t    \t})\r\n\t    \tif(!flag) newState.joke_list.push(action.obj);\r\n    \t}\r\n    }\r\n   \r\n    else if(action.type===\"CHANGE\"){\r\n    \t newState.joke_list.forEach((item)=>{\r\n    \t\tif(item.id===action.id){\r\n    \t\t\titem.flag=!item.flag;\r\n    \t\t}\r\n    \t})\r\n\t}\r\n\telse if(action.type ===\"REMOVE\"){\r\n\t\tconsole.log(action.id)\r\n\t\t// newState.joke_list.splice(index,1)\r\n\t\t// newState.joke_list.filter((item)=>{\r\n\t\t// \tconsole.log(newState)\r\n    \t// \treturn item.id!==action.id\r\n\t\t// })\r\n\t\tnewState.joke_list.forEach((item)=>{\r\n\t\t\tif(item.id===action.id){\r\n\t\t\t\tnewState.joke_list.splice(item.id,1)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tlocalStorage.joke_list=JSON.stringify(newState);\r\n\treturn newState;\r\n}\r\nexport default  reducer;\r\n"]},"metadata":{},"sourceType":"module"}